name: ci-cd.yml

on:
  push:
    branches:
      - main
    paths-ignore:
      - .idea/
      - challenges/
      - sample-data/
      - LICENSE.md
      - README.md
  pull_request:
    branches:
      - main
    paths-ignore:
      - .idea/
      - challenges/
      - sample-data/
      - LICENSE.md
      - README.md
  workflow_dispatch: 
    inputs: 
      deploy:
        description: Deploy to production
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Docker image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build backend image
        run: |
          docker build -t logbook:latest -f Dockerfile .
  
  deploy:
    runs-on: self-hosted
    name: Deploy to production
    needs: build
    environment: production
    if: ${{ github.event.inputs.deploy == 'true' || github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Verify required variables exist
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        if: ${{ env.CLOUDFLARE_API_TOKEN == '' }}
        run: |
          echo "CLOUDFLARE_API_TOKEN is not set. Please set it in the repository secrets."
          exit 1
  
      - name: Docker Compose up
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          docker compose down --remove-orphans || true
          docker compose build
          docker compose up -d --remove-orphans